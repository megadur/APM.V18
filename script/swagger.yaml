openapi: 3.0.1
info:
  title: ArzQaWeb API
  version: 0.7.3
servers:
  - url: https://localhost:44450/api
  - url: http://localhost:3000/api
tags:
  - name: Account
  - name: Apotheke
  - name: Kasse

paths:
  /Account/users/me:
    get:
      tags:
        - Account
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UserViewModel"
            application/json:
              schema:
                $ref: "#/components/schemas/UserViewModel"
            text/json:
              schema:
                $ref: "#/components/schemas/UserViewModel"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
    put:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserEditViewModel"
          text/json:
            schema:
              $ref: "#/components/schemas/UserEditViewModel"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UserEditViewModel"
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
        - oauth2:
            - quickapp_api
    patch:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPatchViewModelJsonPatchDocument"
          text/json:
            schema:
              $ref: "#/components/schemas/UserPatchViewModelJsonPatchDocument"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UserPatchViewModelJsonPatchDocument"
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /Account/users/{id}:
    get:
      tags:
        - Account
      operationId: GetUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UserViewModel"
            application/json:
              schema:
                $ref: "#/components/schemas/UserViewModel"
            text/json:
              schema:
                $ref: "#/components/schemas/UserViewModel"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - oauth2:
            - quickapp_api
    put:
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserEditViewModel"
          text/json:
            schema:
              $ref: "#/components/schemas/UserEditViewModel"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UserEditViewModel"
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - oauth2:
            - quickapp_api
    patch:
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPatchViewModelJsonPatchDocument"
          text/json:
            schema:
              $ref: "#/components/schemas/UserPatchViewModelJsonPatchDocument"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UserPatchViewModelJsonPatchDocument"
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - oauth2:
            - quickapp_api
    delete:
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UserViewModel"
            application/json:
              schema:
                $ref: "#/components/schemas/UserViewModel"
            text/json:
              schema:
                $ref: "#/components/schemas/UserViewModel"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - oauth2:
            - quickapp_api
  /Account/users/username/{userName}:
    get:
      tags:
        - Account
      parameters:
        - name: userName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UserViewModel"
            application/json:
              schema:
                $ref: "#/components/schemas/UserViewModel"
            text/json:
              schema:
                $ref: "#/components/schemas/UserViewModel"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - oauth2:
            - quickapp_api
  /Account/users:
    get:
      tags:
        - Account
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserViewModel"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserViewModel"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserViewModel"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserEditViewModel"
          text/json:
            schema:
              $ref: "#/components/schemas/UserEditViewModel"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UserEditViewModel"
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UserViewModel"
            application/json:
              schema:
                $ref: "#/components/schemas/UserViewModel"
            text/json:
              schema:
                $ref: "#/components/schemas/UserViewModel"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
        - oauth2:
            - quickapp_api
  /Account/users/{pageNumber}/{pageSize}:
    get:
      tags:
        - Account
      parameters:
        - name: pageNumber
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserViewModel"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserViewModel"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserViewModel"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /Account/users/unblock/{id}:
    put:
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - quickapp_api
  /Account/users/me/preferences:
    get:
      tags:
        - Account
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
    put:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /Account/roles/{id}:
    get:
      tags:
        - Account
      operationId: GetRoleById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
            application/json:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
            text/json:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - oauth2:
            - quickapp_api
    put:
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleViewModel"
          text/json:
            schema:
              $ref: "#/components/schemas/RoleViewModel"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RoleViewModel"
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - quickapp_api
    delete:
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
            application/json:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
            text/json:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - oauth2:
            - quickapp_api
  /Account/roles/name/{name}:
    get:
      tags:
        - Account
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
            application/json:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
            text/json:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - oauth2:
            - quickapp_api
  /Account/roles:
    get:
      tags:
        - Account
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoleViewModel"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoleViewModel"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoleViewModel"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleViewModel"
          text/json:
            schema:
              $ref: "#/components/schemas/RoleViewModel"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RoleViewModel"
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
            application/json:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
            text/json:
              schema:
                $ref: "#/components/schemas/RoleViewModel"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /Account/roles/{pageNumber}/{pageSize}:
    get:
      tags:
        - Account
      parameters:
        - name: pageNumber
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoleViewModel"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoleViewModel"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoleViewModel"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /Account/permissions:
    get:
      tags:
        - Account
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PermissionViewModel"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PermissionViewModel"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PermissionViewModel"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /apotheke/{id}:
    get:
      tags:
        - Apotheke
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Apotheke"
            application/json:
              schema:
                $ref: "#/components/schemas/Apotheke"
            text/json:
              schema:
                $ref: "#/components/schemas/Apotheke"
      security:
        - oauth2:
            - quickapp_api
  /apotheke:
    post:
      tags:
        - Apotheke
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Apotheke"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Apotheke"
      responses:
        "200":
          description: normal
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Apotheke"
            application/json:
              schema:
                $ref: "#/components/schemas/Apotheke"
            text/json:
              schema:
                $ref: "#/components/schemas/Apotheke"
      security:
        - oauth2:
            - quickapp_api
    get:
      tags:
        - Apotheke
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: IK
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Apotheke"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Apotheke"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Apotheke"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /apotheke/ping:
    get:
      tags:
        - Apotheke
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /apotheke/ping/secure:
    get:
      tags:
        - Apotheke
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /Customer:
    get:
      tags:
        - Customer
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
    post:
      tags:
        - Customer
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /Customer/throw:
    get:
      tags:
        - Customer
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerViewModel"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerViewModel"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerViewModel"
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /Customer/email:
    get:
      tags:
        - Customer
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /Customer/{id}:
    get:
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
    put:
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
    delete:
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /kasse:
    get:
      tags:
        - Kasse
      parameters:
        - name: jahr
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: monat
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: name
          in: query
          schema:
            type: string
        - name: IK
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Kasse"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Kasse"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Kasse"
      security:
        - oauth2:
            - quickapp_api
    post:
      tags:
        - Kasse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Kasse"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Kasse"
      responses:
        "200":
          description: Normal
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Kasse"
            application/json:
              schema:
                $ref: "#/components/schemas/Kasse"
            text/json:
              schema:
                $ref: "#/components/schemas/Kasse"
      security:
        - oauth2:
            - quickapp_api
  /kasse/{ik}:
    get:
      tags:
        - Kasse
      parameters:
        - name: jahr
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: monat
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: ik
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Kasse"
            application/json:
              schema:
                $ref: "#/components/schemas/Kasse"
            text/json:
              schema:
                $ref: "#/components/schemas/Kasse"
      security:
        - oauth2:
            - quickapp_api
  /kasse/{ik}/umsatz:
    get:
      tags:
        - Kasse
      parameters:
        - name: jahr
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: monat
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: ik
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: arztIk
          in: query
          schema:
            type: integer
            format: int32
        - name: pzn
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Umsatz"
            application/json:
              schema:
                $ref: "#/components/schemas/Umsatz"
            text/json:
              schema:
                $ref: "#/components/schemas/Umsatz"
      security:
        - oauth2:
            - quickapp_api
  /ping:
    get:
      tags:
        - Ping
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /ping/secure:
    get:
      tags:
        - Ping
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        "401":
          description: Unauthorized
      security:
        - oauth2:
            - quickapp_api
  /rezept/anzPerMandantMon_ByYears:
    get:
      tags:
        - Rezept
      parameters:
        - name: jahre
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/HeaderRows"
            application/json:
              schema:
                $ref: "#/components/schemas/HeaderRows"
            text/json:
              schema:
                $ref: "#/components/schemas/HeaderRows"
      security:
        - oauth2:
            - quickapp_api
  /rezept/anzPerMon_ByApoidYear:
    get:
      tags:
        - Rezept
      parameters:
        - name: jahre
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: apoid
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HeaderRows"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HeaderRows"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HeaderRows"
      security:
        - oauth2:
            - quickapp_api
  /rezept/findByParam:
    get:
      tags:
        - Rezept
      parameters:
        - name: apoId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: jahr
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: betrag
          in: query
          schema:
            type: string
        - name: zuzahlung
          in: query
          schema:
            type: string
        - name: versNr
          in: query
          schema:
            type: string
        - name: versGeb
          in: query
          schema:
            type: string
        - name: pzn
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rezept"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rezept"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rezept"
      security:
        - oauth2:
            - quickapp_api
  /rezept/{id}:
    get:
      tags:
        - Rezept
      parameters:
        - name: jahr
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Rezept"
            application/json:
              schema:
                $ref: "#/components/schemas/Rezept"
            text/json:
              schema:
                $ref: "#/components/schemas/Rezept"
      security:
        - oauth2:
            - quickapp_api
  /rezept/{id}/image:
    get:
      tags:
        - Rezept
      parameters:
        - name: jahr
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
              example:
                type: string
                format: binary
                summary: A sample image
                description: "![bear](https://placebear.com/cache/395-205.jpg)"
                value: ""
      security:
        - oauth2:
            - quickapp_api
  /rezept/query:
    post:
      tags:
        - Rezept
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RezeptQuery"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RezeptQuery"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RezeptQueryPost200ResponseInner"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RezeptQueryPost200ResponseInner"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RezeptQueryPost200ResponseInner"
      security:
        - oauth2:
            - quickapp_api
  /rezept/umsatz:
    get:
      tags:
        - Rezept
      parameters:
        - name: jahr
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: typ
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Umsatz"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Umsatz"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Umsatz"
      security:
        - oauth2:
            - quickapp_api
components:
  schemas:
    Adresse:
      type: object
      properties:
        strasse:
          type: string
          nullable: true
        ort:
          type: string
          nullable: true
        zusatz:
          type: string
          nullable: true
        plz:
          type: string
          nullable: true
      additionalProperties: false
    Apotheke:
      type: object
      properties:
        id:
          type: string
          nullable: true
        ik:
          type: string
          nullable: true
        mandantId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        strasse:
          type: string
          nullable: true
        ort:
          type: string
          nullable: true
      additionalProperties: false
    CustomerViewModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        gender:
          type: string
          nullable: true
        orders:
          type: array
          items:
            $ref: "#/components/schemas/OrderViewModel"
          nullable: true
      additionalProperties: false
    IContractResolver:
      type: object
      additionalProperties: false
    Kasse:
      type: object
      properties:
        ik:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        adresse:
          $ref: "#/components/schemas/Adresse"
      additionalProperties: false
    HeaderRows:
      type: object
      properties:
        header:
          type: string
          nullable: true
        rows:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OperationType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    OrderViewModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        discount:
          type: number
          format: double
        comments:
          type: string
          nullable: true
      additionalProperties: false
    PermissionViewModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        groupName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    Rezept:
      type: object
      properties:
        id:
          type: integer
          format: int32
        apoId:
          type: integer
          format: int32
        arztNr:
          type: string
          nullable: true
        versNr:
          type: string
          nullable: true
        versStatus:
          type: integer
          format: int32
        versGeb:
          type: string
          nullable: true
        versNameVor:
          type: string
          nullable: true
        versNameNach:
          type: string
          nullable: true
        centBrutto:
          type: integer
          format: int32
        centZuzahlung:
          type: integer
          format: int32
        centRabApo:
          type: integer
          format: int32
        centRabHst:
          type: integer
          format: int32
        centApoAusz:
          type: integer
          format: int32
        kasseIk:
          type: integer
          format: int32
        kasseName:
          type: string
          nullable: true
        datumAbg:
          nullable: true
        abrPeriode:
          nullable: true
        rezId:
          type: string
          nullable: true
        rezPIC:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        verordnungs:
          type: array
          items:
            $ref: "#/components/schemas/Verordnung"
          nullable: true
      additionalProperties: false
    RezeptQuery:
      type: object
      properties:
        apoId:
          type: integer
          format: int32
        versNr:
          type: string
          nullable: true
        versGeb:
          type: string
          nullable: true
        versName:
          type: string
          nullable: true
        brutto:
          type: string
          nullable: true
        zuzahlung:
          type: string
          nullable: true
        kasseIk:
          type: string
          nullable: true
        kasseName:
          type: string
          nullable: true
        datumAbg:
          type: string
          format: date-time
        datumAbr:
          type: string
          format: date-time
        pic:
          type: string
          nullable: true
        pzn:
          type: string
          nullable: true
      additionalProperties: false
    RezeptQueryPost200ResponseInner:
      type: object
      properties:
        jahr:
          type: string
          nullable: true
        anzahl:
          type: array
          items:
            $ref: "#/components/schemas/RezeptQueryPost200ResponseInnerAnzahlInner"
          nullable: true
      additionalProperties: false
    RezeptQueryPost200ResponseInnerAnzahlInner:
      type: object
      properties:
        name:
          type: string
          nullable: true
        count:
          type: integer
          format: int32
      additionalProperties: false
    RoleViewModel:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          maxLength: 200
          minLength: 2
          type: string
        description:
          type: string
          nullable: true
        usersCount:
          type: integer
          format: int32
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/PermissionViewModel"
          nullable: true
      additionalProperties: false
    Stream:
      type: object
      properties:
        canRead:
          type: boolean
          readOnly: true
        canWrite:
          type: boolean
          readOnly: true
        canSeek:
          type: boolean
          readOnly: true
        canTimeout:
          type: boolean
          readOnly: true
        length:
          type: integer
          format: int64
          readOnly: true
        position:
          type: integer
          format: int64
        readTimeout:
          type: integer
          format: int32
        writeTimeout:
          type: integer
          format: int32
      additionalProperties: false
    Umsatz:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        cent:
          type: integer
          format: int32
      additionalProperties: false
    UserEditViewModel:
      required:
        - email
        - userName
      type: object
      properties:
        id:
          type: string
          nullable: true
        userName:
          maxLength: 200
          minLength: 2
          type: string
        fullName:
          type: string
          nullable: true
        email:
          maxLength: 200
          minLength: 0
          type: string
          format: email
        jobTitle:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        configuration:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        currentPassword:
          type: string
          nullable: true
        newPassword:
          minLength: 6
          type: string
          nullable: true
        roles:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UserPatchViewModelJsonPatchDocument:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: "#/components/schemas/UserPatchViewModelOperation"
          nullable: true
          readOnly: true
        contractResolver:
          $ref: "#/components/schemas/IContractResolver"
      additionalProperties: false
    UserPatchViewModelOperation:
      type: object
      properties:
        operationType:
          $ref: "#/components/schemas/OperationType"
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    UserViewModel:
      required:
        - email
        - userName
      type: object
      properties:
        id:
          type: string
          nullable: true
        userName:
          maxLength: 200
          minLength: 2
          type: string
        fullName:
          type: string
          nullable: true
        email:
          maxLength: 200
          minLength: 0
          type: string
          format: email
        jobTitle:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        configuration:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        isLockedOut:
          type: boolean
        roles:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    Verordnung:
      type: object
      properties:
        id:
          type: string
          nullable: true
        pzn:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        centBrutto:
          type: integer
          format: int32
        centZuzahlung:
          type: integer
          format: int32
        isAutidem:
          type: string
          nullable: true
        faktor:
          pattern: /^\d*\.?\d*$/
          type: string
          nullable: true
        centRabApo:
          type: integer
          format: int32
        centRabHst:
          type: integer
          format: int32
      additionalProperties: false
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        password:
          tokenUrl: /connect/token
          scopes:
            quickapp_api: ArzQaWeb API
