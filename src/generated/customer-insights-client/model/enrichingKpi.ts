/**
 * CustomerInsightsManagementClient
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ProvisioningState } from './provisioningState';
import { KpiParticipantProfilesMetadata } from './kpiParticipantProfilesMetadata';
import { KpiExtract } from './kpiExtract';
import { KpiAlias } from './kpiAlias';
import { KpiThresholds } from './kpiThresholds';
import { KpiGroupByMetadata } from './kpiGroupByMetadata';


/**
 * The enriching KPI definition.
 */
export interface EnrichingKpi { 
    /**
     * The aliases.
     */
    aliases?: Array<KpiAlias>;
    /**
     * The calculation window.
     */
    calculationWindow: EnrichingKpi.CalculationWindowEnum;
    /**
     * Name of calculation window field.
     */
    calculationWindowFieldName?: string;
    /**
     * Localized description for the KPI.
     */
    description?: { [key: string]: string; };
    /**
     * Localized display name for the KPI.
     */
    displayName?: { [key: string]: string; };
    /**
     * The mapping entity type.
     */
    entityType: EnrichingKpi.EntityTypeEnum;
    /**
     * The mapping entity name.
     */
    entityTypeName: string;
    /**
     * The computation expression for the KPI.
     */
    expression: string;
    /**
     * The KPI extracts.
     */
    extracts?: Array<KpiExtract>;
    /**
     * The filter expression for the KPI.
     */
    filter?: string;
    /**
     * The computation function for the KPI.
     */
    'function': EnrichingKpi.FunctionEnum;
    /**
     * the group by properties for the KPI.
     */
    groupBy?: Array<string>;
    /**
     * The KPI GroupByMetadata.
     */
    readonly groupByMetadata?: Array<KpiGroupByMetadata>;
    /**
     * The KPI name.
     */
    readonly kpiName?: string;
    /**
     * The participant profiles.
     */
    readonly participantProfilesMetadata?: Array<KpiParticipantProfilesMetadata>;
    provisioningState?: ProvisioningState;
    /**
     * The hub name.
     */
    readonly tenantId?: string;
    thresHolds?: KpiThresholds;
    /**
     * The unit of measurement for the KPI.
     */
    unit?: string;
}
export namespace EnrichingKpi {
    export const CalculationWindowEnum = {
        Lifetime: 'Lifetime',
        Hour: 'Hour',
        Day: 'Day',
        Week: 'Week',
        Month: 'Month'
    } as const;
    export type CalculationWindowEnum = typeof CalculationWindowEnum[keyof typeof CalculationWindowEnum];
    export const EntityTypeEnum = {
        None: 'None',
        Profile: 'Profile',
        Interaction: 'Interaction',
        Relationship: 'Relationship'
    } as const;
    export type EntityTypeEnum = typeof EntityTypeEnum[keyof typeof EntityTypeEnum];
    export const FunctionEnum = {
        Sum: 'Sum',
        Avg: 'Avg',
        Min: 'Min',
        Max: 'Max',
        Last: 'Last',
        Count: 'Count',
        None: 'None',
        CountDistinct: 'CountDistinct'
    } as const;
    export type FunctionEnum = typeof FunctionEnum[keyof typeof FunctionEnum];
}


